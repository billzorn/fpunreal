(FPCore (x1 x2 x3 x4 x5 x6)
 :name "floudas1"
 :precision binary64
 :pre (and (<= 0 x1 6) (<= 0 x2 6) (<= 1 x3 5)
           (<= 0 x4 6) (<= 0 x5 6) (<= 0 x6 10)
           (>= (- (+ (* (- x3 3) (- x3 3)) x4) 4) 0)
           (>= (- (+ (* (- x5 3) (- x5 3)) x6) 4) 0)
           (>= (+ (- 2 x1) (* 3 x2)) 0)
           (>= (- (+ 2 x1) x2) 0)
           (>= (- (- 6 x1) x2) 0)
           (>= (- (+ x1 x2) 2) 0))
 (- (- (- (- (- (* -25 (* (- x1 2) (- x1 2))) (* (- x2 2) (- x2 2))) (* (- x3 1) (- x3 1))) (* (- x4 4) (- x4 4))) (* (- x5 1) (- x5 1))) (* (- x6 4) (- x6 4))))

(FPCore (x1 x2)
 :name "floudas2"
 :precision binary64
 :pre (and (<= 0 x1 3) (<= 0 x2 4)
           (>= (- (+ (- (* 2 (* (* x1 x1) (* x1 x1))) (* (* 8 (* x1 x1)) x1)) (* (* 8 x1) x1)) x2) 0)
           (>= (- (+ (- (+ (- (* 4 (* (* x1 x1) (* x1 x1))) (* (* 32 (* x1 x1)) x1)) (* (* 88 x1) x1)) (* 96 x1)) 36) x2) 0))
 (- (- x1) x2))

(FPCore (x1 x2)
 :name "floudas3"
 :precision binary64
 :pre (and (<= 0 x1 2) (<= 0 x2 3) (>= (+ (* -2 (* (* x1 x1) (* x1 x1))) 2) x2))
 (+ (- (* -12 x1) (* 7 x2)) (* x2 x2)))

(FPCore (x1 x2 x3 x4 x5 x6)
 :name "kepler0"
 :precision binary64
 :pre (and (<= 4 x1 6.36) (<= 4 x2 6.36) (<= 4 x3 6.36) (<= 4 x4 6.36) (<= 4 x5 6.36) (<= 4 x6 6.36))
 (+ (- (- (+ (* x2 x5) (* x3 x6)) (* x2 x3)) (* x5 x6))
    (* x1 (+ (+ (- (+ (+ (- x1) x2) x3) x4) x5) x6))))

(FPCore (x1 x2 x3 x4)
 :name "kepler1"
 :precision binary64
 :pre (and (<= 4 x1 6.36) (<= 4 x2 6.36) (<= 4 x3 6.36) (<= 4 x4 6.36))
 (- (- (- (- (+ (+ (* (* x1 x4) (- (+ (+ (- x1) x2) x3) x4))
                   (* x2 (+ (+ (- x1 x2) x3) x4)))
                (* x3 (+ (- (+ x1 x2) x3) x4)))
             (* (* x2 x3) x4))
          (* x1 x3))
       (* x1 x2))
    x4))

(FPCore (x1 x2 x3 x4 x5 x6)
 :name "kepler2"
 :precision binary64
 :pre (and (<= 4 x1 6.36) (<= 4 x2 6.36) (<= 4 x3 6.36)
           (<= 4 x4 6.36) (<= 4 x5 6.36) (<= 4 x6 6.36))
 (- (- (- (- (+ (+ (* (* x1 x4) (+ (+ (- (+ (+ (- x1) x2) x3) x4) x5) x6))
                   (* (* x2 x5) (+ (- (+ (+ (- x1 x2) x3) x4) x5) x6)))
                (* (* x3 x6) (- (+ (+ (- (+ x1 x2) x3) x4) x5) x6)))
             (* (* x2 x3) x4))
          (* (* x1 x3) x5))
       (* (* x1 x2) x6))
    (* (* x4 x5) x6)))

(FPCore (t)
  :name "intro-example"
  :cite (solovyev-et-al-2015)
  :pre (<= 0 t 999)
  (/ t (+ t 1)))

(FPCore (x0 x1 x2 x3 x4 x5 x6 x7)
  :name "test02_sum8"
  :precision binary64
  :pre (and (< 1 x0 2) (< 1 x1 2) (< 1 x2 2)
            (< 1 x3 2) (< 1 x4 2) (< 1 x5 2)
            (< 1 x6 2) (< 1 x7 2))
  (+ (+ (+ (+ (+ (+ (+ x0 x1) x2) x3) x4) x5) x6) x7))

(FPCore (x y)
  :name "test03_nonlin2"
  :precision binary64
  :pre (and (< 0 x 1) (< -1 y -0.1))
  (/ (+ x y) (- x y)))

(FPCore (x)
  :name "test05_nonlin1, test2"
  :precision binary64
  :pre (< 1.00001 x 2)
  (/ 1 (+ x 1)))

(FPCore (x0 x1 x2 x3)
  :name "test06_sums4, sum1"
  :precision binary32
  :pre (and (< -1e-5 x0 1.00001) (< 0 x1 1) (< 0 x2 1) (< 0 x3 1))
  (+ (+ (+ x0 x1) x2) x3))

(FPCore (x0 x1 x2 x3)
  :name "test06_sums4, sum2"
  :precision binary32
  :pre (and (< -1e-5 x0 1.00001) (< 0 x1 1) (< 0 x2 1) (< 0 x3 1))
  (+ (+ x0 x1) (+ x2 x3)))

(FPCore (x)
 :name "NMSE example 3.1"
 :cite (hamming-1987 herbie-2015)
 :fpbench-domain textbook
 :pre (>= x 0)
 (- (sqrt (+ x 1)) (sqrt x)))

(FPCore (x)
 :name "NMSE example 3.6"
 :cite (hamming-1987 herbie-2015)
 :fpbench-domain textbook
 :pre (>= x 0)
 (- (/ 1 (sqrt x)) (/ 1 (sqrt (+ x 1)))))

(FPCore (x)
 :name "NMSE problem 3.3.1"
 :cite (hamming-1987 herbie-2015)
 :fpbench-domain textbook
 :pre (!= x 0)
 (- (/ 1 (+ x 1)) (/ 1 x)))

(FPCore (x)
 :name "NMSE problem 3.3.3"
 :cite (hamming-1987 herbie-2015)
 :fpbench-domain textbook
 :pre (!= x 0 1 -1)
 (+ (- (/ 1 (+ x 1)) (/ 2 x)) (/ 1 (- x 1))))

(FPCore (a b c)
 :name "NMSE p42, positive"
 :cite (hamming-1987 herbie-2015)
 :fpbench-domain textbook
 :pre (and (>= (* b b) (* 4 (* a c))) (!= a 0))
 (/ (+ (- b) (sqrt (- (* b b) (* 4 (* a c))))) (* 2 a)))

(FPCore (a b c)
 :name "NMSE p42, negative"
 :cite (hamming-1987 herbie-2015)
 :fpbench-domain textbook
 :pre (and (>= (* b b) (* 4 (* a c))) (!= a 0))
 (/ (- (- b) (sqrt (- (* b b) (* 4 (* a c))))) (* 2 a)))

(FPCore (a b2 c)
 :name "NMSE problem 3.2.1, positive"
 :cite (hamming-1987 herbie-2015)
 :fpbench-domain textbook
 :pre (and (>= (* b2 b2) (* a c)) (!= a 0))
 (/ (+ (- b2) (sqrt (- (* b2 b2) (* a c)))) a))

(FPCore (a b2 c)
 :name "NMSE problem 3.2.1, negative"
 :cite (hamming-1987 herbie-2015)
 :fpbench-domain textbook
 :pre (and (>= (* b2 b2) (* a c)) (!= a 0))
 (/ (- (- b2) (sqrt (- (* b2 b2) (* a c)))) a))

(FPCore (re im)
 :name "Complex square root"
 :cite (herbie-2015)
 (* 0.5 (sqrt (* 2.0 (+ (sqrt (+ (* re re) (* im im))) re)))))

(FPCore (x1 x2 x3)
  :name "rigidBody1"
  :cite (darulova-kuncak-2014 solovyev-et-al-2015)
  :fpbench-domain science
  :precision binary64
  :pre (and (<= -15 x1 15) (<= -15 x2 15) (<= -15 x3 15))
  (- (- (- (- (* x1 x2)) (* (* 2 x2) x3)) x1) x3))

(FPCore (x1 x2 x3)
  :name "rigidBody2"
  :cite (darulova-kuncak-2014 solovyev-et-al-2015)
  :fpbench-domain science
  :precision binary64
  :pre (and (<= -15 x1 15) (<= -15 x2 15) (<= -15 x3 15))
  (- (+ (- (+ (* (* (* 2 x1) x2) x3) (* (* 3 x3) x3))
           (* (* (* x2 x1) x2) x3)) (* (* 3 x3) x3))
     x2))

(FPCore (v w r)
  :name "turbine1"
  :cite (darulova-kuncak-2014 solovyev-et-al-2015)
  :fpbench-domain controls
  :precision binary64
  :pre (and (<= -4.5 v -0.3) (<= 0.4 w 0.9) (<= 3.8 r 7.8))
  (- (- (+ 3 (/ 2 (* r r))) (/ (* (* 0.125 (- 3 (* 2 v))) (* (* (* w w) r) r)) (- 1 v))) 4.5))

(FPCore (v w r)
  :name "turbine2"
  :cite (darulova-kuncak-2014 solovyev-et-al-2015)
  :fpbench-domain controls
  :precision binary64
  :pre (and (<= -4.5 v -0.3) (<= 0.4 w 0.9) (<= 3.8 r 7.8))
  (- (- (* 6 v) (/ (* (* 0.5 v) (* (* (* w w) r) r)) (- 1 v))) 2.5))

(FPCore (v w r)
  :name "turbine3"
  :cite (darulova-kuncak-2014 solovyev-et-al-2015)
  :fpbench-domain controls
  :precision binary64
  :pre (and (<= -4.5 v -0.3) (<= 0.4 w 0.9) (<= 3.8 r 7.8))
  (- (- (- 3 (/ 2 (* r r)))
        (/ (* (* 0.125 (+ 1 (* 2 v))) (* (* (* w w) r) r)) (- 1 v)))
     0.5))

(FPCore (x)
  :name "sine"
  :cite (darulova-kuncak-2014 solovyev-et-al-2015)
  :fpbench-domain mathematics
  :precision binary64
  :rosa-ensuring 1e-14
  :pre (< -1.57079632679 x 1.57079632679)
  (- (+ (- x (/ (* (* x x) x) 6.0))
        (/ (* (* (* (* x x) x) x) x) 120))
     (/ (* (* (* (* (* (* x x) x) x) x) x) x) 5040)))

(FPCore (x)
  :name "sqroot"
  :cite (darulova-kuncak-2014 solovyev-et-al-2015)
  :fpbench-domain mathematics
  :pre (<= 0 x 1)
  (- (+ (- (+ 1.0 (* 0.5 x)) (* (* 0.125 x) x))
        (* (* (* 0.0625 x) x) x)) (* (* (* (* 0.0390625 x) x) x) x)))

(FPCore (x)
  :name "sineOrder3"
  :cite (darulova-kuncak-2014 solovyev-et-al-2015)
  :fpbench-domain mathematics
  :precision binary64
  :pre (< -2 x 2)
  :rosa-ensuring 1e-14
  (- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x))))

(FPCore (u)
  :name "bspline3"
  :cite (darulova-kuncak-2014)
  :pre (<= 0 u 1)
  :rosa-ensuring 1e-11
  (/ (- (* (* u u) u)) 6))
